"0","library(causalPAF)
"
"2","Registered S3 method overwritten by 'data.table':
  method           from
  print.data.table     
"
"0",""
"0","# This automatically loads the fictional strokedata."
"0","# Here we create a duplicate of strokedata called stroke_reduced."
"0","stroke_reduced <- strokedata"
"0",""
"0","# The data should contain a column of weights for case control matching."
"0","# strokedata$weights"
"0",""
"0","# The data should have reference levels of all risk factors already set. This can be done as follows:"
"0","# levels(stroke_reduced$htnadmbp) <- c(0, 1)"
"0","# stroke_reduced$subhtn <-  factor(stroke_reduced$subhtn,levels=c(1, 2))"
"0","# levels(stroke_reduced$nevfcur) <- c(1, 2)"
"0","# stroke_reduced$global_stress2  <- factor(stroke_reduced$global_stress2,levels=c(1,2))"
"0","# levels(stroke_reduced$whrs2tert) <- c(1, 2, 3)"
"0","# levels(stroke_reduced$phys) <- c(2, 1)"
"0","# levels(stroke_reduced$alcohfreqwk) <- c(1, 2, 3)"
"0","# stroke_reduced$dmhba1c2 <- factor(stroke_reduced$dmhba1c2,levels=c(1,2))"
"0","# stroke_reduced$cardiacrfcat <- factor(stroke_reduced$cardiacrfcat,levels=c(1,2))"
"0","# levels(stroke_reduced$ahei3tert) <- c(3,2,1)"
"0","# levels(stroke_reduced$apob_apoatert) <- c(1,2,3)"
"0",""
"0","# The causalPAF package assumes the data is either complete case data or that missing data analysis has already been performed."
"0",""
"0","# Next, define the causal structure or directed acyclic graph (DAG) of the causal Bayesian network defined by the data. We list the parents of each exposure or risk factor or outcome in a vector as follows: "
"0",""
"0","# Note it is important that the order at which the variables are defined is such that all parents of that variable are defined before it. Please refer to the figure of the causal Bayesian network (with both direct and indirect effects) defined earlier as an example of this order."
"0",""
"0","in_phys <- c(""subeduc"",""moteduc"",""fatduc"")"
"0","in_ahei <- c(""subeduc"",""moteduc"",""fatduc"")"
"0","in_nevfcur <- c(""subeduc"",""moteduc"",""fatduc"")"
"0","in_alcohfreqwk <- c(""subeduc"",""moteduc"",""fatduc"")"
"0","in_global_stress2 <- c(""subeduc"",""moteduc"",""fatduc"")"
"0","in_subhtn <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"")"
"0","in_apob_apoa <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"")"
"0","in_whr <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"")"
"0",""
"0","# Note splines can be fitted within the causal structure as shown below especially if splines are to be used in the fitted models."
"0","# It is important that splines of parent variables are ""typed"" or ""spelt"" consistently (including spaces) throughout as causalPAF can fit models automatically provided variables are spelt consistently. Also if a parent variable is a spline it should be defined in spline format in all occurences of the parent variable."
"0","in_cardiacrfcat <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"",""ns(apob_apoa, knots = quantile(apob_apoa,c(.25,0.5,0.75)), Boundary.knots = quantile(apob_apoa,c(.001,0.95)))"",""ns(whr,df=5)"",""subhtn"")"
"0","in_dmhba1c2 <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"",""ns(apob_apoa, knots = quantile(apob_apoa,c(.25,0.5,0.75)), Boundary.knots = quantile(apob_apoa,c(.001,0.95)))"",""ns(whr,df=5)"",""subhtn"")"
"0","in_case <- c(""subeduc"",""moteduc"",""fatduc"",""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"",""ns(apob_apoa, knots = quantile(apob_apoa,c(.25,0.5,0.75)), Boundary.knots = quantile(apob_apoa,c(.001,0.95)))"",""ns(whr,df=5)"",""subhtn"",""cardiacrfcat"",""dmhba1c2"")"
"0",""
"0","# Then we define a two dimensional list consisting of"
"0","# 1. inlist i.e. a list of the parents of each variable of interest corresponding to its column name in the data. Splines should be included here if they are to be modelled as splines."
"0","# 2. outlist i.e. a list of each variable of interest corresponding to its column name in the data. Splines should not be input here, only the column names of the variables of interest in the data."
"0","# Again the order is such that each variable is defined after all its parents. "
"0",""
"0","in_out <- list(inlist=list(in_phys,in_ahei,in_nevfcur,in_alcohfreqwk,in_global_stress2,in_subhtn,in_apob_apoa,in_whr,in_cardiacrfcat,in_dmhba1c2,in_case),outlist=c(""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"",""subhtn"",""apob_apoa"",""whr"",""cardiacrfcat"",""dmhba1c2"",""case""))"
"0",""
"0",""
"0","### WILL ONLY WORK IF Splines_outlist DEFINED IN FORMAT list(c(""splinename1"",""splinename2"",""splinename3"")) since need Splines_outlist[[1]][splinesInMediatorIndicesInin_outDAG2] in code"
"0","# If splines are to be used for variables listed in in_out$outlist, then the splines should be defined in the same order as variables appear in in_out$outlist as follows. It is necessary to list variables in in_out$outlist without splines if no spline is to be applied. "
"0","Splines_outlist = list( c(""phys"",""ahei3tert"",""nevfcur"",""alcohfreqwk"",""global_stress2"",""subhtn"",""ns(apob_apoa, knots = quantile(apob_apoa,c(.25,0.5,0.75)), Boundary.knots = quantile(apob_apoa,c(.001,0.95)))"",""ns(whr,df=5)"",""cardiacrfcat"",""dmhba1c2"",""case"") )"
"0",""
"0","#The checkMarkovDAG() funct"
